// src/App.jsx
import React, { useState, useEffect } from 'react';
import './App.css';
import Login from './Login';
import Register from './Register';
import ThemesList from './ThemesList';

const App = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const [activeView, setActiveView] = useState('home');
  const [currentUser, setCurrentUser] = useState(null);
  const [loading, setLoading] = useState(true);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  useEffect(() => {
    validateAuth();
  }, []);

  const validateAuth = async () => {
    try {
      const response = await fetch('http://localhost:8080/api/login/validate', {
        method: 'GET',
        credentials: 'include' // –í–∞–∂–Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫—É–∫–æ–≤
      });

      if (response.ok) {
        const data = await response.json();
        setCurrentUser(data.message);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleLoginSuccess = (user) => {
    setCurrentUser(user);
    setActiveView('home');
  };

  const handleRegisterSuccess = (user) => {
    // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    setActiveView('login');
  };

  const handleLogout = async () => {
    try {
      const response = await fetch('http://localhost:8080/api/login/logout', {
        method: 'POST',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        }
      });

      // –í—Å–µ–≥–¥–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
      setCurrentUser(null);
      setActiveView('home');

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º –∫—É–∫–∏ –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–µ
      document.cookie = "Authorization=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/";

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
      // –î–∞–∂–µ –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏, –≤—Å–µ —Ä–∞–≤–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setCurrentUser(null);
      setActiveView('home');
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º –∫—É–∫–∏
      document.cookie = "Authorization=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/";
    }
  };

  if (loading) {
    return (
        <div className="min-h-screen flex items-center justify-center">
          <div className="text-2xl">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
        </div>
    );
  }

  return (
      <div className="forum-container">
        {/* –õ–µ–≤–æ–µ –º–µ–Ω—é */}
        <nav className="sidebar">
          <div className="logo">–§–æ—Ä—É–º</div>
          <ul>
            <li className={activeView === 'home' ? 'active' : ''} onClick={() => setActiveView('home')}>
              <div className="menu-icon">üè†</div>
              <span>–ì–ª–∞–≤–Ω–∞—è</span>
            </li>
            <li className={activeView === 'search' ? 'active' : ''} onClick={() => setActiveView('search')}>
              <div className="menu-icon">üîç</div>
              <span>–ü–æ–∏—Å–∫</span>
            </li>
            <li className={activeView === 'members' ? 'active' : ''} onClick={() => setActiveView('members')}>
              <div className="menu-icon">üë•</div>
              <span>–£—á–∞—Å—Ç–Ω–∏–∫–∏</span>
            </li>
            <li className={activeView === 'ratings' ? 'active' : ''} onClick={() => setActiveView('ratings')}>
              <div className="menu-icon">üìä</div>
              <span>–†–µ–π—Ç–∏–Ω–≥–∏</span>
            </li>
            <li className={activeView === 'settings' ? 'active' : ''} onClick={() => setActiveView('settings')}>
              <div className="menu-icon">‚öôÔ∏è</div>
              <span>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
            </li>
            <div className="divider"></div>

            {!currentUser ? (
                <>
                  <li className={activeView === 'register' ? 'active' : ''} onClick={() => setActiveView('register')}>
                    <div className="menu-icon">üìù</div>
                    <span>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</span>
                  </li>
                  <li className={activeView === 'login' ? 'active' : ''} onClick={() => setActiveView('login')}>
                    <div className="menu-icon">üîë</div>
                    <span>–í–æ–π—Ç–∏</span>
                  </li>
                </>
            ) : (
                <li onClick={handleLogout}>
                  <div className="menu-icon">üö™</div>
                  <span>–í—ã–π—Ç–∏</span>
                </li>
            )}
          </ul>
        </nav>

        <div className="main-content">
          {/* –•–µ–¥–µ—Ä —Å –ø–æ–∏—Å–∫–æ–º */}
          <header className="forum-header">
            <div className="search-container">
              <input
                  type="text"
                  placeholder="–ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ä—É–º—É..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
              />
              <button className="search-button">üîç</button>
            </div>
            <div className="user-menu">
              <div className="user-avatar">üë§</div>
              <span>{currentUser ? currentUser.Username : '–ì–æ—Å—Ç—å'}</span>
            </div>
          </header>

          {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
          <main className="main-content-wrapper">
            {activeView === 'home' ? (
                <ThemesList />
            ) : activeView === 'login' ? (
                currentUser ? (
                    <div className="content-area">
                      <p>–í—ã —É–∂–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ {currentUser.Username}</p>
                      <button onClick={() => setActiveView('home')}>–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é</button>
                    </div>
                ) : (
                    <Login onLoginSuccess={handleLoginSuccess} />
                )
            ) : activeView === 'register' ? (
                <Register onRegisterSuccess={handleRegisterSuccess} />
            ) : (
                <div className="content-area">
                  <p>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "{activeView}" –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–∑–∂–µ.</p>
                </div>
            )}
          </main>
        </div>
      </div>
  );
};

export default App;